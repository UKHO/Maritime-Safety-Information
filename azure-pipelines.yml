name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yy)$(DayOfYear).$(BuildCounter)

parameters:
  - name: ContinueEvenIfResourcesAreGettingDestroyed
    displayName: "Continue even if resources are getting destroyed"
    type: boolean
    default: false

trigger:
  - main
  - release/*

pool: 
    name: NautilusBuild
    demands: vs_16 -equals 1 #exclude agents 13 and 14 as code coverage report fails

variables:
  - name: BuildConfiguration
    value: "release"
  - name: BuildPlatform
    value: "any cpu"
  - name: BuildCounter
    value: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  - name: UKHOAssemblyCompany
    value: "UK Hydrographic Office"
  - name: UKHOAssemblyVersionPrefix
    value: "1.0."
  - name: UKHOAssemblyProduct
    value: "Maritime Safety Information"
  - name: UKHOAssemblyCopyright
    value: "Copyright Â© UK Hydrographic Office"
  - name: Container
    value: "ukhydrographicoffice/terraform-azure-powershell-unzip:1.4.5"
  - name: DeploymentPool
    value: "UKHO Ubuntu 1804"
  - name: coverityPool
    value: NautilusBuild
  - group: Covscan-vars
  - name: WindowsPool
    value: "NautilusBuild"

resources:
  repositories:
  - repository: covscan
    type: github
    name: UKHO/coverityscan-buildtemplates
    endpoint: "Maritime Safety Information"
    ref: refs/heads/master

stages:
  - stage: PERFORM_DEPENDENCYCHECK_DOTNETBUILD_DOTNETTEST_AND_PUBLISH
    displayName: "Build (inc DependencyChecker, Dotnet Build , dotnet test and publish artifact )"
    dependsOn: []
    jobs:
      - job: PublishTerraformArtifacts
        workspace:
          clean: all
        displayName: "Publish Terraform Artifacts"
        steps:
          - task: CopyFiles@2
            displayName: Copy MaritimeSafetyInformationService Config
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)\UKHO.MaritimeSafetyInformation.Web\UKHO.MaritimeSafetyInformation.Web\'
              Contents: 'appsettings.json'
              TargetFolder: '$(Build.SourcesDirectory)\Deployment\src'

          - task: PublishBuildArtifacts@1
            displayName: "Publish terraform Artifacts"
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)\Deployment'
              ArtifactName: terraformartifact

      - job: PublishIntegrationTestsArtifacts
        workspace:
          clean: all
        displayName: "Publish Integration Test Artifacts"
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET 6.0.x sdk'
            inputs:
              packageType: sdk
              useGlobalJson: true
              workingDirectory: '$(Build.SourcesDirectory)\UKHO.MaritimeSafetyInformation.Web'

          - task: DotNetCoreCLI@2
            displayName: ".Net Core - NuGet restore"
            inputs:
              command: restore
              projects: |
                **/*.csproj
              feedsToUse: config
              noCache: true
              nugetConfigPath: '$(Build.SourcesDirectory)\BuildNuget.config'
              workingDirectory: '$(Build.SourcesDirectory)\UKHO.MaritimeSafetyInformation.Web'

          - task: DotNetCoreCLI@2
            displayName: "Publish Integration Test Code"
            inputs:
              command: "publish"
              publishWebProjects: false
              projects: '**/*UKHO.MaritimeSafetyInformation.IntegrationTests.csproj'
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\UKHO.MaritimeSafetyInformation.Web.IntegrationTests'
              zipAfterPublish: false

          - task: PublishBuildArtifacts@1
            displayName: "Publish Integration Test Results"
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)\UKHO.MaritimeSafetyInformation.Web.IntegrationTests'
              ArtifactName: IntegrationTests

  - stage: Devdeploy
    displayName: "Devdeploy (inc terraform, webapp deploy)"
    variables:
      - group: "Maritime-Safety-Information-Dev-TF-Variables"
      - group: "Maritime-Safety-Information-Dev-Variables"
    jobs:
      - deployment: DevDeployTerraform
        displayName: "Dev - Deploy Terraform and Dotnet App"
        environment: "Maritime-Safety-Information-Dev"
        pool: $(DeploymentPool)
        container: ${{variables.Container}}
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - template: Deployment/templates/continuous-deployment.yml
                  parameters:
                    ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
                    AzureSubscription: "Maritime Safety Information Dev - A.008.02"

                - task: AzureCLI@2
                  displayName: "Set entity in table storage"
                  inputs:
                    azureSubscription: "Maritime Safety Information Dev - A.008.02"
                    scriptType: 'pscore'
                    scriptLocation: 'scriptPath'
                    scriptPath: '$(Pipeline.Workspace)/terraformartifact/SetEntityInTableStorage.ps1'
                    arguments: "-Storageaccountname $(storage_name) -Tablename $(table_storage_name)"

      - job: FunctionalAndAccessibilityTests
        dependsOn:
        - DevDeployTerraform
        pool: $(WindowsPool)
        displayName: "Dev Functional Automated And Accessibility Tests"
        variables:
         WEB_APP_NAME: $[ dependencies.DevDeployTerraform.outputs['DevDeployTerraform.TerraformDeploy.WEB_APP_NAME']  ]        
         url: $[ dependencies.DevDeployTerraform.outputs['DevDeployTerraform.TerraformDeploy.MsiWafUrl']  ]
         rnwAdminUrl: $[ dependencies.DevDeployTerraform.outputs['DevDeployTerraform.TerraformDeploy.Admin_DNS_URL']  ]
         webapp_rg: $[ dependencies.DevDeployTerraform.outputs['DevDeployTerraform.TerraformDeploy.webapp_rg']  ]        
         PLAYWRIGHT_JUNIT_OUTPUT_NAME: results.xml
        workspace:
         clean: all
        steps:
          - template: Deployment/templates/continuous-testing.yml
            parameters:
              AzureSubscription: "Maritime Safety Information Dev - A.008.02"
